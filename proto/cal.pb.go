// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cal.proto

package calendar

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Calendar struct {
	Name                 string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Meetings             []*Meeting `protobuf:"bytes,2,rep,name=meetings,proto3" json:"meetings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Calendar) Reset()         { *m = Calendar{} }
func (m *Calendar) String() string { return proto.CompactTextString(m) }
func (*Calendar) ProtoMessage()    {}
func (*Calendar) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a2f82458aee149, []int{0}
}

func (m *Calendar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Calendar.Unmarshal(m, b)
}
func (m *Calendar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Calendar.Marshal(b, m, deterministic)
}
func (m *Calendar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Calendar.Merge(m, src)
}
func (m *Calendar) XXX_Size() int {
	return xxx_messageInfo_Calendar.Size(m)
}
func (m *Calendar) XXX_DiscardUnknown() {
	xxx_messageInfo_Calendar.DiscardUnknown(m)
}

var xxx_messageInfo_Calendar proto.InternalMessageInfo

func (m *Calendar) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Calendar) GetMeetings() []*Meeting {
	if m != nil {
		return m.Meetings
	}
	return nil
}

type Meeting struct {
	Subject              string   `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	StartTime            string   `protobuf:"bytes,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime              string   `protobuf:"bytes,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Meeting) Reset()         { *m = Meeting{} }
func (m *Meeting) String() string { return proto.CompactTextString(m) }
func (*Meeting) ProtoMessage()    {}
func (*Meeting) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a2f82458aee149, []int{1}
}

func (m *Meeting) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Meeting.Unmarshal(m, b)
}
func (m *Meeting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Meeting.Marshal(b, m, deterministic)
}
func (m *Meeting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Meeting.Merge(m, src)
}
func (m *Meeting) XXX_Size() int {
	return xxx_messageInfo_Meeting.Size(m)
}
func (m *Meeting) XXX_DiscardUnknown() {
	xxx_messageInfo_Meeting.DiscardUnknown(m)
}

var xxx_messageInfo_Meeting proto.InternalMessageInfo

func (m *Meeting) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *Meeting) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *Meeting) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

type GetRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a2f82458aee149, []int{2}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

type Response struct {
	Created              bool        `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
	Calendars            []*Calendar `protobuf:"bytes,2,rep,name=calendars,proto3" json:"calendars,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a2f82458aee149, []int{3}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCreated() bool {
	if m != nil {
		return m.Created
	}
	return false
}

func (m *Response) GetCalendars() []*Calendar {
	if m != nil {
		return m.Calendars
	}
	return nil
}

func init() {
	proto.RegisterType((*Calendar)(nil), "calendar.Calendar")
	proto.RegisterType((*Meeting)(nil), "calendar.Meeting")
	proto.RegisterType((*GetRequest)(nil), "calendar.GetRequest")
	proto.RegisterType((*Response)(nil), "calendar.Response")
}

func init() { proto.RegisterFile("cal.proto", fileDescriptor_24a2f82458aee149) }

var fileDescriptor_24a2f82458aee149 = []byte{
	// 252 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x51, 0xbd, 0x4e, 0xc3, 0x30,
	0x10, 0x26, 0x2d, 0xa2, 0xce, 0x51, 0x81, 0x38, 0x31, 0x44, 0x88, 0xa1, 0xf2, 0xd4, 0x85, 0x08,
	0x95, 0xad, 0x6b, 0x87, 0x4e, 0x5d, 0x0c, 0x62, 0x61, 0x72, 0x9d, 0x13, 0x0a, 0x6a, 0x9c, 0x62,
	0x5f, 0x79, 0x07, 0xde, 0x1a, 0x71, 0x8d, 0x31, 0x12, 0x6c, 0x77, 0xdf, 0x5f, 0xee, 0x8b, 0xa1,
	0x74, 0x76, 0x57, 0xef, 0x43, 0xcf, 0x3d, 0x2a, 0x67, 0x77, 0xe4, 0x1b, 0x1b, 0xf4, 0x06, 0xd4,
	0x6a, 0x98, 0x11, 0xe1, 0xd4, 0xdb, 0x8e, 0xaa, 0x62, 0x56, 0xcc, 0x4b, 0x23, 0x33, 0xde, 0x81,
	0xea, 0x88, 0xb8, 0xf5, 0xaf, 0xb1, 0x1a, 0xcd, 0xc6, 0xf3, 0xf3, 0xc5, 0x55, 0x9d, 0xcc, 0xf5,
	0xe6, 0xc8, 0x98, 0x1f, 0x89, 0x7e, 0x81, 0xc9, 0x00, 0x62, 0x05, 0x93, 0x78, 0xd8, 0xbe, 0x91,
	0xe3, 0x21, 0x30, 0xad, 0x78, 0x0b, 0x65, 0x64, 0x1b, 0xf8, 0xa9, 0xed, 0xa8, 0x1a, 0x09, 0x97,
	0x81, 0x6f, 0x1f, 0xf9, 0x46, 0xb8, 0xf1, 0xd1, 0x37, 0xac, 0x7a, 0x0a, 0xb0, 0x26, 0x36, 0xf4,
	0x7e, 0xa0, 0xc8, 0xfa, 0x19, 0x94, 0xa1, 0xb8, 0xef, 0x7d, 0x14, 0x8f, 0x0b, 0x64, 0x99, 0x1a,
	0xf9, 0x96, 0x32, 0x69, 0xc5, 0x7b, 0xa9, 0x2d, 0xe7, 0xa6, 0x02, 0x98, 0x0b, 0xa4, 0xea, 0x26,
	0x8b, 0x16, 0x9f, 0x05, 0x5c, 0x26, 0xfc, 0x91, 0xc2, 0x47, 0xeb, 0x08, 0x97, 0x70, 0xb1, 0x92,
	0xc0, 0xfc, 0xaf, 0xfe, 0x86, 0xdc, 0xfc, 0xc2, 0xd2, 0x65, 0xfa, 0x04, 0x97, 0x30, 0x5d, 0x13,
	0x27, 0x51, 0xc4, 0xeb, 0xac, 0xca, 0x6d, 0xfe, 0xf7, 0x6e, 0xcf, 0xe4, 0xb9, 0x1e, 0xbe, 0x02,
	0x00, 0x00, 0xff, 0xff, 0xad, 0x47, 0x8a, 0x4e, 0xbb, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CalendarServiceClient is the client API for CalendarService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalendarServiceClient interface {
	CreateCalendar(ctx context.Context, in *Calendar, opts ...grpc.CallOption) (*Response, error)
	GetCalendars(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Response, error)
}

type calendarServiceClient struct {
	cc *grpc.ClientConn
}

func NewCalendarServiceClient(cc *grpc.ClientConn) CalendarServiceClient {
	return &calendarServiceClient{cc}
}

func (c *calendarServiceClient) CreateCalendar(ctx context.Context, in *Calendar, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/calendar.CalendarService/CreateCalendar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarServiceClient) GetCalendars(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/calendar.CalendarService/GetCalendars", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CalendarServiceServer is the server API for CalendarService service.
type CalendarServiceServer interface {
	CreateCalendar(context.Context, *Calendar) (*Response, error)
	GetCalendars(context.Context, *GetRequest) (*Response, error)
}

// UnimplementedCalendarServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCalendarServiceServer struct {
}

func (*UnimplementedCalendarServiceServer) CreateCalendar(ctx context.Context, req *Calendar) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCalendar not implemented")
}
func (*UnimplementedCalendarServiceServer) GetCalendars(ctx context.Context, req *GetRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCalendars not implemented")
}

func RegisterCalendarServiceServer(s *grpc.Server, srv CalendarServiceServer) {
	s.RegisterService(&_CalendarService_serviceDesc, srv)
}

func _CalendarService_CreateCalendar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Calendar)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServiceServer).CreateCalendar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calendar.CalendarService/CreateCalendar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServiceServer).CreateCalendar(ctx, req.(*Calendar))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalendarService_GetCalendars_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServiceServer).GetCalendars(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calendar.CalendarService/GetCalendars",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServiceServer).GetCalendars(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CalendarService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calendar.CalendarService",
	HandlerType: (*CalendarServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCalendar",
			Handler:    _CalendarService_CreateCalendar_Handler,
		},
		{
			MethodName: "GetCalendars",
			Handler:    _CalendarService_GetCalendars_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cal.proto",
}
